{"ast":null,"code":"import _classCallCheck from \"/Users/stefan/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stefan/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stefan/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stefan/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stefan/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/stefan/my-app/src/components/home.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ToggleDisplay from 'react-toggle-display';\nimport Suggestions from './suggestions';\nimport HeaderPoster from './header_poster';\nimport TopRatedMovies from './top_rated_movies';\nimport UpcomingMovies from './upcoming_movies';\nimport PopularMovies from './popular_movies';\nimport TvOnAir from './tv_on_air';\nimport PopularTvShows from './popular_tv_shows';\nvar API_KEY = '40d60badd3d50dea05d2a0e053cc96c3'; // API KEY\n\nvar URL = 'https://api.themoviedb.org/3/search/multi?'; // API URL\n\nvar PARAMS = '&page=1&include_adult=false`'; // API options\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.performSearch = function () {\n      // Requesting data from API\n      var now = _this.now = Date.now();\n      axios.get(\"\".concat(URL, \"api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(_this.state.searchInput).concat(PARAMS)).then(function (res) {\n        console.log(res.data.results); // Accepting response if this request was the last request made\n\n        if (now === _this.now) {\n          _this.setState({\n            searchResults: res.data.results\n          });\n        }\n      });\n    };\n\n    _this.getHeaderPoster = function () {\n      axios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1').then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          isMovie: true\n        });\n\n        _this.setState({\n          trending: res.data.results\n        });\n      });\n    };\n\n    _this.handleInputChange = function () {\n      _this.setState({\n        searchInput: _this.search.value // User input\n\n      }, function () {\n        if (_this.state.searchInput && _this.state.searchInput.length > 1) {\n          if (_this.state.searchInput.length % 2 === 0) {\n            // Request data on user input\n            _this.performSearch();\n\n            _this.setState({\n              show: false\n            }); // Hides components when search value is changed\n\n          }\n        } else {\n          _this.now = Date.now();\n\n          _this.setState({\n            show: true\n          }); // Shows components when search is empty\n\n\n          _this.setState({\n            searchResults: []\n          }); // Empties Array \n\n        }\n      });\n    };\n\n    _this.handleGetGenre = function (genreId) {\n      var mainGenre;\n\n      if (_this.props.movieGenres.genres) {\n        _this.props.movieGenres.genres.forEach(function (genre) {\n          if (genre.id === genreId[0]) {\n            mainGenre = genre.name;\n          }\n        });\n      }\n\n      return mainGenre;\n    };\n\n    _this.getTopMovies = function () {\n      axios.get('https://api.themoviedb.org/3/movie/top_rated?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1').then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          isMovie: true\n        });\n\n        _this.setState({\n          topMovies: res.data.results\n        });\n      });\n    };\n\n    _this.getUpcomingMovies = function () {\n      axios.get('https://api.themoviedb.org/3/movie/upcoming?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1').then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          isMovie: true\n        });\n\n        _this.setState({\n          upcomingMovies: res.data.results\n        });\n      });\n    };\n\n    _this.getPopularMovies = function () {\n      axios.get('https://api.themoviedb.org/3/movie/popular?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1').then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          isMovie: true\n        });\n\n        _this.setState({\n          popularMovies: res.data.results\n        });\n      });\n    };\n\n    _this.getTVOnAir = function () {\n      axios.get('https://api.themoviedb.org/3/tv/on_the_air?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1').then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          tvOnAir: res.data.results\n        });\n      });\n    };\n\n    _this.getPopularTvShows = function () {\n      axios.get('https://api.themoviedb.org/3/tv/top_rated?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1append_to_response=external_ids').then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          popularTvShows: res.data.results\n        });\n      });\n    };\n\n    _this.state = {\n      searchResults: [],\n      // API Call returns an array of results\n      searchInput: '',\n      // Search Term for API Call\n      trending: [],\n      // Banner\n      topMovies: [],\n      // Top Movies Carousel\n      upcomingMovies: [],\n      // Upcoming Movies Carousel\n      popularMovies: [],\n      // Popular Movies Carousel\n      tvOnAir: [],\n      // Airing on TV Carousel\n      popularTvShows: [],\n      // Popular Tv Shows Carousel\n      show: true,\n      // Toggle elements on User Input,\n      isMovie: false\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getHeaderPoster();\n      this.getTopMovies();\n      this.getUpcomingMovies();\n      this.getPopularMovies();\n      this.getTVOnAir();\n      this.getPopularTvShows();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img-header\",\n        alt: \"app icon\",\n        src: \"Netflix_2015_logo.svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-bar\",\n        placeholder: \"Movies, Tv Shows, Genres\",\n        ref: function ref(input) {\n          return _this2.search = input;\n        },\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-results-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Suggestions, {\n        searchResults: this.state.searchResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(ToggleDisplay, {\n        if: this.state.show,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(HeaderPoster, {\n        trending: this.state.trending,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(UpcomingMovies, {\n        upcomingMovies: this.state.upcomingMovies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(TopRatedMovies, {\n        topMovies: this.state.topMovies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(PopularMovies, {\n        popularMovies: this.state.popularMovies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(TvOnAir, {\n        tvOnAir: this.state.tvOnAir,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(PopularTvShows, {\n        popularTvShows: this.state.popularTvShows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/stefan/my-app/src/components/home.js"],"names":["React","Component","axios","ToggleDisplay","Suggestions","HeaderPoster","TopRatedMovies","UpcomingMovies","PopularMovies","TvOnAir","PopularTvShows","API_KEY","URL","PARAMS","Home","props","performSearch","now","Date","get","state","searchInput","then","res","console","log","data","results","setState","searchResults","getHeaderPoster","isMovie","trending","handleInputChange","search","value","length","show","handleGetGenre","genreId","mainGenre","movieGenres","genres","forEach","genre","id","name","getTopMovies","topMovies","getUpcomingMovies","upcomingMovies","getPopularMovies","popularMovies","getTVOnAir","tvOnAir","getPopularTvShows","popularTvShows","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport ToggleDisplay from 'react-toggle-display';\nimport Suggestions from './suggestions'\nimport HeaderPoster from './header_poster'\nimport TopRatedMovies from './top_rated_movies'\nimport UpcomingMovies from './upcoming_movies'\nimport PopularMovies from './popular_movies'\nimport TvOnAir from './tv_on_air'\nimport PopularTvShows from './popular_tv_shows';\n\nconst API_KEY = '40d60badd3d50dea05d2a0e053cc96c3' // API KEY\nconst URL = 'https://api.themoviedb.org/3/search/multi?' // API URL\nconst PARAMS = '&page=1&include_adult=false`' // API options\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      searchResults: [], // API Call returns an array of results\n      searchInput: '', // Search Term for API Call\n\t\t\ttrending: [], // Banner\n      topMovies: [], // Top Movies Carousel\n      upcomingMovies: [], // Upcoming Movies Carousel\n      popularMovies: [], // Popular Movies Carousel\n      tvOnAir: [], // Airing on TV Carousel\n      popularTvShows: [], // Popular Tv Shows Carousel\n      show: true, // Toggle elements on User Input,\n      isMovie: false\n    }\n  }\n\n  performSearch = () => { // Requesting data from API\n    let now = (this.now = Date.now());\n    axios.get(`${URL}api_key=${API_KEY}&language=en-US&query=${this.state.searchInput}${PARAMS}`)\n        .then((res) => {\n            console.log(res.data.results);\n            // Accepting response if this request was the last request made\n            if (now === this.now) {\n               this.setState({ searchResults: res.data.results});\n            }\n        });\n}\n\n\tgetHeaderPoster = () => {\n\t\taxios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data)\n        this.setState({ isMovie: true })\n\t\t\t\tthis.setState({ trending: res.data.results})\n\t\t\t})\n\t}\n\n\thandleInputChange = () => {\n    this.setState({\n        searchInput: this.search.value // User input\n    }, () => {\n        if (this.state.searchInput && this.state.searchInput.length >1 ) {\n            if (this.state.searchInput.length % 2 === 0) { // Request data on user input\n                this.performSearch();\n                this.setState({ show: false }) // Hides components when search value is changed\n            }\n        } else {\n             this.now = Date.now();\n             this.setState({ show: true }); // Shows components when search is empty\n             this.setState({ searchResults: [] }) // Empties Array \n             \n        }\n    });\n\t}\n\n // Compare the item genres with the genre list and returns genre names\n  handleGetGenre = genreId => {\n    let mainGenre;\n    if (this.props.movieGenres.genres) {\n      this.props.movieGenres.genres.forEach(genre => {\n        if (genre.id === genreId[0]) {\n          mainGenre = genre.name;\n        }\n      });\n    }\n\n    return mainGenre;\n  } \n\n  getTopMovies = () => {\n      axios.get('https://api.themoviedb.org/3/movie/top_rated?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n        .then((res) => {\n          console.log(res.data)\n          this.setState({ isMovie: true })\n          this.setState({ topMovies: res.data.results })\n        })\n    }\n\n    getUpcomingMovies = () => {\n      axios.get('https://api.themoviedb.org/3/movie/upcoming?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n      .then((res) => {\n        console.log(res.data)\n        this.setState({ isMovie: true })\n        this.setState({ upcomingMovies: res.data.results })\n      })\n    }\n\n    getPopularMovies = () => {\n      axios.get('https://api.themoviedb.org/3/movie/popular?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n    .then((res) => {\n      console.log(res.data)\n      this.setState({ isMovie: true })\n      this.setState({ popularMovies: res.data.results })\n    })\n  }\n\n  getTVOnAir = () => {\n    axios.get('https://api.themoviedb.org/3/tv/on_the_air?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n    .then((res) => {\n      console.log(res.data)\n      this.setState({ tvOnAir: res.data.results })\n    })\n  }\n\n  getPopularTvShows = () => {\n    axios.get('https://api.themoviedb.org/3/tv/top_rated?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1append_to_response=external_ids')\n    .then((res) => {\n      console.log(res.data)\n      this.setState({ popularTvShows: res.data.results })\n    })\n  }\n\ncomponentDidMount(){\n\tthis.getHeaderPoster()\n  this.getTopMovies()\n  this.getUpcomingMovies()\n  this.getPopularMovies()\n  this.getTVOnAir()\n  this.getPopularTvShows()\n}\n render () {\n   return (\n      <div className='home'>\n          <header>\n            <img className='img-header' alt='app icon' src='Netflix_2015_logo.svg' /> \n            <form>\n              <input \n                className=\"search-bar\"\n                placeholder=\"Movies, Tv Shows, Genres\"\n                ref={input => this.search = input}\n                onChange={this.handleInputChange}\n              />\n            </form>\n          </header>\n          <div className='search-results-div'>\n            <Suggestions searchResults={ this.state.searchResults } />\n          </div>\n          <ToggleDisplay if={this.state.show}>\n            <HeaderPoster trending={ this.state.trending } />\n            <UpcomingMovies upcomingMovies={ this.state.upcomingMovies } />\n            <TopRatedMovies topMovies={ this.state.topMovies } />\n            <PopularMovies popularMovies={ this.state.popularMovies } />\n            <TvOnAir tvOnAir={this.state.tvOnAir}/>\n            <PopularTvShows popularTvShows={ this.state.popularTvShows } />\n          </ToggleDisplay>\n        </div>\n   )\n }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}