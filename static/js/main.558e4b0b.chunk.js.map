{"version":3,"sources":["components/suggestions.js","components/header_poster.js","components/top_rated_movies.js","components/upcoming_movies.js","components/popular_movies.js","components/tv_on_air.js","components/popular_tv_shows.js","components/home.js","components/tv_item_details.js","components/tv_details.js","components/movie_item_details.js","components/movie_cast.js","components/movie_recommend.js","components/movie_details.js","App.js","serviceWorker.js","index.js"],"names":["Suggestions","props","options","searchResults","map","r","react_default","a","createElement","key","id","Link","to","concat","media_type","href","className","vote_average","src","poster_path","alt","title","name","headerImages","imageResults","trending","slice","backdrop_path","overview","react_carousel_default","tagName","infinite","autoPlay","breakpoints","1000","clickToChange","500","slidesPerPage","slidesPerScroll","animationSpeed","TopRatedMovies","topMovieResults","topMovies","arrows","stopAutoPlayOnHover","offset","itemWidth","centered","UpcomingMovies","upcomingMovieResults","upcomingMovies","PopularMovies","PopularMovieResults","popularMovies","TvOnAir","tvOnAirResults","tvOnAir","PopularTvShows","popTvResults","popularTvShows","API_KEY","URL","PARAMS","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","performSearch","now","Date","axios","get","state","searchInput","then","res","console","log","data","results","setState","getHeaderPoster","handleInputChange","search","value","length","show","handleGetGenre","genreId","mainGenre","movieGenres","genres","forEach","genre","getTopMovies","getUpcomingMovies","getPopularMovies","isMovie","getTVOnAir","getPopularTvShows","type","_this2","placeholder","ref","input","onChange","suggestions","ToggleDisplay_default","if","header_poster","upcoming_movies","top_rated_movies","popular_movies","tv_on_air","popular_tv_shows","Component","TvItemDetails","tvDetails","objectSpread","react_star_rating_component_default","editing","starCount","Math","round","TvDetails","fetchTvDetails","tvId","match","params","tv_item_details","MovieItemDetails","movieDetails","MovieCast","movieCastResults","movieCast","profile_path","MovieRec","movieRecResults","movieRec","MovieDetails","fetchMovieDetails","itemId","fetchMovieCredits","cast","fetchRecommendedMovies","prevProps","window","scrollTo","movie_item_details","movie_cast","movie_recommend","App","BrowserRouter","Switch","Route","path","exact","component","Boolean","location","hostname","hashHistory","createHashHistory","basename","process","ReactDOM","render","HashRouter","history","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.558e4b0b.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Suggestions = (props) => {\n  const options = props.searchResults.map(r => (\n    <li\n      key={r.id} >\n      <Link key={r.id} to={`/details/${r.media_type}/${r.id}`}>\n        <a href='#t' className='rating'><i className='fas fa-star fa-fw' />{r.vote_average}</a>\n        <img src={`https://image.tmdb.org/t/p/w185/${r.poster_path}`} alt={r.title} className='search-results-poster' />\n        <a href='#t' className='search-results-name'>{r.name}</a>\n        <a href='#t' className='search-results-title'>{r.title}</a>\n      </Link>\n    </li>\n  ))\n  return <ul className='search-results'>{options}</ul>\n}\n\nexport default Suggestions\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Carousel from '@brainhubeu/react-carousel'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\nconst headerImages = (props) => {\n  const imageResults = props.trending.slice(0, 5).map(r => ( // Grab firt 5 array objects\n    <Link key={r.id} to={`/details/movie/${r.id}`}>\n      <div key={r.id}>\n        <header className='item-header-image'><img key={r.id} src={`https://image.tmdb.org/t/p/w1280${r.backdrop_path}`} alt={r.title} className='header-image' /></header>\n        <h1 className='now-playing'>Latest</h1>\n        <h1 className='header-title'>{r.title}</h1>\n        <h4 className='header-details'>{r.overview}</h4>\n      </div>\n    </Link>\n  ))\n  return <div className='header-images'>\n    <Carousel tagName='test' infinite autoPlay={4500}\n    breakpoints={{\n        1000: { // these props will be applied when screen width is less than 1000px\n          clickToChange: false,\n          autoPlay: 4500,\n        },\n        500: {\n          slidesPerPage: 1,\n          slidesPerScroll: 1,\n          autoPlay: 4500,\n          animationSpeed: 2000,\n          infinite: true,\n        },\n      }}>{imageResults}</Carousel>\n  </div>\n}\n\nexport default headerImages\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Carousel from '@brainhubeu/react-carousel'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\nconst TopRatedMovies = (props) => {\n  const topMovieResults = props.topMovies.map(r => (\n    <Link key={r.id} to={`/details/movie/${r.id}`}>\n      <div\n        key={r.id} >\n        <img src={`https://image.tmdb.org/t/p/w185/${r.poster_path}`} alt={r.title} className='top-movie-results-poster' />\n      </div>\n    </Link>\n  ))\n  return <div className='top-movie-results'>\n    <h2 className='top-rated-header'>Top Rated Movies</h2>\n    <div>\n      <Carousel infinite\n        slidesPerPage={8}\n        slidesPerScroll={3}\n        arrows\n        animationSpeed={1500}\n        stopAutoPlayOnHover\n        offset={50}\n        itemWidth={225}\n        centered\n        breakpoints={{\n        1000: { // these props will be applied when screen width is less than 1000px\n          slidesPerPage: 3,\n          clickToChange: false,\n          centered: false,\n          arrows: true,\n          infinite: false,\n          offset: 1\n        },\n        500: {\n          itemWidth: 25,\n          offset:1,\n          slidesPerPage: 2,\n          slidesPerScroll: 1,\n          clickToChange: false,\n          centered: true,\n          animationSpeed: 2000,\n          infinite: false,\n        },\n      }}>{topMovieResults}</Carousel></div>\n  </div>\n}\n\nexport default TopRatedMovies\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Carousel from '@brainhubeu/react-carousel'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\nconst UpcomingMovies = (props) => {\n  const upcomingMovieResults = props.upcomingMovies.map(r => (\n    <Link key={r.id} to={`/details/movie/${r.id}`}>\n      <div\n        key={r.id} >\n        <img src={`https://image.tmdb.org/t/p/w185/${r.poster_path}`} alt={r.title} className='top-movie-results-poster' />\n      </div>\n    </Link>\n  ))\n  return <div className='top-movie-results'>\n    <h2 className='top-rated-header'>Upcoming Movies</h2>\n    <div>\n      <Carousel infinite\n        slidesPerPage={8}\n        slidesPerScroll={3}\n        arrows\n        animationSpeed={1500}\n        stopAutoPlayOnHover\n        offset={50}\n        itemWidth={225}\n        centered\n        breakpoints={{\n        1000: { // these props will be applied when screen width is less than 1000px\n          slidesPerPage: 3,\n          clickToChange: false,\n          centered: false,\n          arrows: true,\n          infinite: false,\n          offset: 1\n        },\n        500: {\n          itemWidth: 25,\n          offset:1,\n          slidesPerPage: 2,\n          slidesPerScroll: 1,\n          clickToChange: false,\n          centered: true,\n          animationSpeed: 2000,\n          infinite: false,\n        },\n      }}>{upcomingMovieResults}</Carousel></div>\n  </div>\n}\n\nexport default UpcomingMovies\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Carousel from '@brainhubeu/react-carousel'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\nconst PopularMovies = (props) => {\n  const PopularMovieResults = props.popularMovies.map(r => (\n    <Link key={r.id} to={`/details/movie/${r.id}`}>\n      <div\n        key={r.id} >\n        <img src={`https://image.tmdb.org/t/p/w185/${r.poster_path}`} alt={r.title} className='top-movie-results-poster' />\n      </div>\n    </Link>\n  ))\n  return <div className='top-movie-results'>\n    <h2 className='top-rated-header'>Popular Movies</h2>\n    <div >\n      <Carousel infinite\n        slidesPerPage={8}\n        slidesPerScroll={3}\n        arrows\n        animationSpeed={1500}\n        stopAutoPlayOnHover\n        offset={50}\n        itemWidth={225}\n        centered\n        breakpoints={{\n        1000: { // these props will be applied when screen width is less than 1000px\n          slidesPerPage: 3,\n          clickToChange: false,\n          centered: false,\n          arrows: true,\n          infinite: false,\n          offset: 1\n        },\n        500: {\n          itemWidth: 25,\n          offset:1,\n          slidesPerPage: 2,\n          slidesPerScroll: 1,\n          clickToChange: false,\n          centered: true,\n          animationSpeed: 2000,\n          infinite: false,\n        },\n      }}\n        >{PopularMovieResults}</Carousel></div>\n  </div>\n}\n\nexport default PopularMovies\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Carousel from '@brainhubeu/react-carousel'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\nconst TvOnAir = (props) => {\n  const tvOnAirResults = props.tvOnAir.map(r => (\n    <Link key={r.id} to={`/details/tv/${r.id}`}>\n      <div\n        key={r.id} >\n        <img src={`https://image.tmdb.org/t/p/w185/${r.poster_path}`} alt={r.title} className='top-movie-results-poster' />\n      </div>\n    </Link>\n  ))\n  return <div className='top-movie-results'>\n    <h2 className='top-rated-header'>Airing on TV</h2>\n    <div>\n      <Carousel infinite\n        slidesPerPage={8}\n        slidesPerScroll={3}\n        arrows\n        animationSpeed={1500}\n        stopAutoPlayOnHover\n        offset={50}\n        itemWidth={225}\n        centered\n        breakpoints={{\n        1000: { // these props will be applied when screen width is less than 1000px\n          slidesPerPage: 3,\n          clickToChange: false,\n          centered: false,\n          arrows: true,\n          infinite: false,\n          offset: 1\n        },\n        500: {\n          itemWidth: 25,\n          offset:1,\n          slidesPerPage: 2,\n          slidesPerScroll: 1,\n          clickToChange: false,\n          centered: true,\n          animationSpeed: 2000,\n          infinite: false,\n        },\n      }}>{tvOnAirResults}</Carousel></div>\n  </div>\n}\n\nexport default TvOnAir\n","import React from 'react'\nimport Carousel from '@brainhubeu/react-carousel'\nimport { Link } from 'react-router-dom'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\nconst PopularTvShows = (props) => {\n  const popTvResults = props.popularTvShows.map(r => (\n    <Link key={r.id} to={`/details/tv/${r.id}`}>\n      <div\n        key={r.id} >\n        <img src={`https://image.tmdb.org/t/p/w185/${r.poster_path}`} alt={r.title} className='top-movie-results-poster' />\n      </div>\n    </Link>\n  ))\n  return <div className='top-movie-results'>\n    <h2 className='top-rated-header'>Popular Tv Shows</h2>\n    <div>\n      <Carousel infinite\n        slidesPerPage={8}\n        slidesPerScroll={3}\n        arrows\n        animationSpeed={1500}\n        stopAutoPlayOnHover\n        offset={50}\n        itemWidth={225}\n        centered\n        breakpoints={{\n        1000: { // these props will be applied when screen width is less than 1000px\n          slidesPerPage: 3,\n          clickToChange: false,\n          centered: false,\n          arrows: true,\n          infinite: false,\n          offset: 1\n        },\n        500: {\n          itemWidth: 25,\n          offset:1,\n          slidesPerPage: 2,\n          slidesPerScroll: 1,\n          clickToChange: false,\n          centered: true,\n          animationSpeed: 2000,\n          infinite: false,\n        },\n      }}>{popTvResults}</Carousel></div>\n  </div>\n}\n\nexport default PopularTvShows\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport ToggleDisplay from 'react-toggle-display';\nimport Suggestions from './suggestions'\nimport HeaderPoster from './header_poster'\nimport TopRatedMovies from './top_rated_movies'\nimport UpcomingMovies from './upcoming_movies'\nimport PopularMovies from './popular_movies'\nimport TvOnAir from './tv_on_air'\nimport PopularTvShows from './popular_tv_shows';\n\nconst API_KEY = '40d60badd3d50dea05d2a0e053cc96c3' // API KEY\nconst URL = 'https://api.themoviedb.org/3/search/multi?' // API URL\nconst PARAMS = '&page=1&include_adult=false`' // API options\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      searchResults: [], // API Call returns an array of results\n      searchInput: '', // Search Term for API Call\n\t\t\ttrending: [], // Banner\n      topMovies: [], // Top Movies Carousel\n      upcomingMovies: [], // Upcoming Movies Carousel\n      popularMovies: [], // Popular Movies Carousel\n      tvOnAir: [], // Airing on TV Carousel\n      popularTvShows: [], // Popular Tv Shows Carousel\n      show: true, // Toggle elements on User Input,\n      type: ''\n    }\n  }\n\n  performSearch = () => { // Requesting data from API\n    let now = (this.now = Date.now());\n    axios.get(`${URL}api_key=${API_KEY}&language=en-US&query=${this.state.searchInput}${PARAMS}`)\n        .then((res) => {\n            console.log(res.data.results);\n            // Accepting response if this request was the last request made\n            if (now === this.now) {\n               this.setState({ searchResults: res.data.results});\n            }\n        });\n}\n\n\tgetHeaderPoster = () => {\n\t\taxios.get('https://api.themoviedb.org/3/movie/now_playing?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data)\n\t\t\t\tthis.setState({ trending: res.data.results})\n\t\t\t})\n\t}\n\n\thandleInputChange = () => {\n    this.setState({\n        searchInput: this.search.value // User input\n    }, () => {\n        if (this.state.searchInput && this.state.searchInput.length >1 ) {\n            if (this.state.searchInput.length % 2 === 0) { // Request data on user input\n                this.performSearch();\n                this.setState({ show: false }) // Hides components when search value is changed\n            }\n        } else {\n             this.now = Date.now();\n             this.setState({ show: true }); // Shows components when search is empty\n             this.setState({ searchResults: [] }) // Empties Array \n             \n        }\n    });\n\t}\n\n // Compare the item genres with the genre list and returns genre names\n  handleGetGenre = genreId => {\n    let mainGenre;\n    if (this.props.movieGenres.genres) {\n      this.props.movieGenres.genres.forEach(genre => {\n        if (genre.id === genreId[0]) {\n          mainGenre = genre.name;\n        }\n      });\n    }\n\n    return mainGenre;\n  } \n\n  getTopMovies = () => {\n      axios.get('https://api.themoviedb.org/3/movie/top_rated?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n        .then((res) => {\n          console.log(res.data)\n          this.setState({ topMovies: res.data.results })\n        })\n    }\n\n    getUpcomingMovies = () => {\n      axios.get('https://api.themoviedb.org/3/movie/upcoming?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n      .then((res) => {\n        console.log(res.data)\n        this.setState({ upcomingMovies: res.data.results })\n      })\n    }\n\n    getPopularMovies = () => {\n      axios.get('https://api.themoviedb.org/3/movie/popular?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n    .then((res) => {\n      console.log(res.data)\n      this.setState({ isMovie: true })\n      this.setState({ popularMovies: res.data.results })\n    })\n  }\n\n  getTVOnAir = () => {\n    axios.get('https://api.themoviedb.org/3/tv/on_the_air?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1')\n    .then((res) => {\n      console.log(res.data)\n      this.setState({ tvOnAir: res.data.results })\n    })\n  }\n\n  getPopularTvShows = () => {\n    axios.get('https://api.themoviedb.org/3/tv/top_rated?api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US&page=1append_to_response=external_ids')\n    .then((res) => {\n      console.log(res.data)\n      this.setState({ popularTvShows: res.data.results })\n    })\n  }\n\ncomponentDidMount(){\n\tthis.getHeaderPoster()\n  this.getTopMovies()\n  this.getUpcomingMovies()\n  this.getPopularMovies()\n  this.getTVOnAir()\n  this.getPopularTvShows()\n}\n render () {\n   return (\n      <div className='home'>\n          <header>\n            <form>\n              <input \n                className=\"search-bar\"\n                placeholder=\"Movies, Tv Shows, Genres\"\n                ref={input => this.search = input}\n                onChange={this.handleInputChange}\n              />\n            </form>\n          </header>\n          <div className='search-results-div'>\n            <Suggestions searchResults={ this.state.searchResults } />\n          </div>\n          <ToggleDisplay if={this.state.show}>\n            <HeaderPoster trending={ this.state.trending } />\n            <UpcomingMovies upcomingMovies={ this.state.upcomingMovies } />\n            <TopRatedMovies topMovies={ this.state.topMovies } />\n            <PopularMovies popularMovies={ this.state.popularMovies } />\n            <TvOnAir tvOnAir={this.state.tvOnAir}/>\n            <PopularTvShows popularTvShows={ this.state.popularTvShows } />\n          </ToggleDisplay>\n        </div>\n   )\n }\n}\n\nexport default Home","\n\nimport React from 'react'\nimport StarRatingComponent from 'react-star-rating-component';\nimport { Link } from 'react-router-dom'\n\n\nconst TvItemDetails = (props) => {\n  const {tvDetails} = {...props};\n      return (tvDetails && tvDetails.genres ? <div>\n        <div className='item-details-main'>\n          <header className='item-header-image'>\n            <img key={tvDetails.id} \n              src={`https://image.tmdb.org/t/p/w1280${tvDetails.backdrop_path}`} \n              alt={tvDetails.title} className='item-details-hero-backdrop' \n            />\n            <div className='item-details-hero-info'>\n            <Link to={`/`}><i id='back-button' className=\"fas fa-chevron-left\"></i></Link>\n              <img className='item-details-hero-info-poster' src={`https://image.tmdb.org/t/p/w185/${tvDetails.poster_path}`} alt={tvDetails.title} />\n              <div className='item-details-hero-info-details'>\n                <h1 className='item-details-hero-info-title'>{tvDetails.title}</h1>\n                <p>{tvDetails.vote_average} / 10</p>\n                <StarRatingComponent\n                  name={tvDetails.name}\n                  editing={false}\n                  starCount={5}\n                  value={Math.round(tvDetails.vote_average / 2)} />\n                <h3 className='item-details-hero-genre'>{tvDetails.genres[0].name} </h3>\n              </div>\n            </div>\n          </header>\n          <h2 className='item-details-body'>Summary</h2>\n          <p className='item-details-overview'>{tvDetails.overview}</p>\n        </div>\n      </div> : null);\n}\n\nexport default TvItemDetails\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport TvItemDetails from './tv_item_details'\n\nclass TvDetails extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      tvDetails: []\n    }\n  }\n\n  fetchTvDetails = () => {\n    const tvId = this.props.match.params.id;\n    const URL = 'https://api.themoviedb.org/3/tv';\n    const API_KEY = 'api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US';\n\n    axios.get(`${URL}/${tvId}?${API_KEY}`).then(res => {\n      console.log(res.data);\n      this.setState({ tvDetails: res.data })\n      });\n   }\n\n  componentDidMount() {\n    this.fetchTvDetails()\n  }\n  render() {\n    return (\n    <div className='tv-details'>\n      <TvItemDetails tvDetails={ this.state.tvDetails }/>\n    </div>\n    )\n  }\n}\n\nexport default TvDetails\n","import React from 'react'\nimport StarRatingComponent from 'react-star-rating-component';\nimport { Link } from 'react-router-dom'\n\nconst MovieItemDetails = (props) => {\n  const {movieDetails} = {...props};\n      return (movieDetails && movieDetails.genres ? <div>\n        <div className='item-details-main'>\n          <header className='item-header-image'>\n            <img key={movieDetails.id} \n              src={`https://image.tmdb.org/t/p/w1280${movieDetails.backdrop_path}`} \n              alt={movieDetails.title} className='item-details-hero-backdrop' \n            />\n            <div className='overlay'></div>\n            <div className='item-details-hero-info'>\n            <Link to={`/`}><i id='back-button' className=\"fas fa-chevron-left\"></i></Link>\n              <img className='item-details-hero-info-poster' src={`https://image.tmdb.org/t/p/w185/${movieDetails.poster_path}`} alt={movieDetails.title} />\n              <div className='item-details-hero-info-details'>\n                <h1 className='item-details-hero-info-title'>{movieDetails.title}</h1>\n                <p>{movieDetails.vote_average} / 10</p>\n                <StarRatingComponent\n                  name={movieDetails.title}\n                  editing={false}\n                  starCount={5}\n                  value={Math.round(movieDetails.vote_average / 2)} />\n                <h3 className='item-details-hero-genre'>{movieDetails.genres[0].name} |  {movieDetails.genres[1].name} </h3>\n              </div>\n            </div>\n          </header>\n          <h2 className='item-details-body'>Summary</h2>\n          <p className='item-details-overview'>{movieDetails.overview}</p>\n        </div>\n      </div> : null);\n}\n\nexport default MovieItemDetails\n\n","import React from 'react'\nimport Carousel from '@brainhubeu/react-carousel'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\n\nconst MovieCast = (props) => {\n  const movieCastResults = props.movieCast.slice(0, 20).map(r => (\n      <div\n        key={r.id} >\n        <img src={`https://image.tmdb.org/t/p/w185/${r.profile_path}`} alt={r.name} className='top-movie-results-poster' />\n        <p className='movie-cast-name'>{r.name}</p>\n      </div>\n  ))\n  return <div className='top-movie-results'>\n    <h2 className='item-details-body'>Cast</h2>\n    <div >\n      <Carousel infinite\n        slidesPerPage={8}\n        slidesPerScroll={3}\n        arrows\n        animationSpeed={1500}\n        stopAutoPlayOnHover\n        offset={50}\n        itemWidth={225}\n        centered\n        breakpoints={{\n        1000: { // these props will be applied when screen width is less than 1000px\n          slidesPerPage: 3,\n          clickToChange: false,\n          centered: false,\n          arrows: true,\n          infinite: false,\n          offset: 1\n        },\n        500: {\n          itemWidth: 25,\n          offset:1,\n          slidesPerPage: 2,\n          slidesPerScroll: 1,\n          clickToChange: false,\n          centered: true,\n          animationSpeed: 2000,\n          infinite: false,\n        },\n      }}\n        >{movieCastResults}\n        </Carousel></div>\n  </div>\n}\n\nexport default MovieCast","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Carousel from '@brainhubeu/react-carousel'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\nconst MovieRec = (props) => {\n  const movieRecResults = props.movieRec.map(r => (\n    <Link key={r.id} to={`/details/movie/${r.id}`}>\n      <div\n        key={r.id} >\n        <img src={`https://image.tmdb.org/t/p/w185/${r.poster_path}`} alt={r.title} className='top-movie-results-poster' />\n      </div>\n    </Link>\n  ))\n  return <div className='top-movie-results'>\n    <h2 className='item-details-body'>More Like This</h2>\n    <div className='cara'>\n      <Carousel infinite\n        slidesPerPage={8}\n        slidesPerScroll={3}\n        arrows\n        animationSpeed={1500}\n        stopAutoPlayOnHover\n        offset={50}\n        itemWidth={225}\n        centered\n        breakpoints={{\n        1000: { // these props will be applied when screen width is less than 1000px\n          slidesPerPage: 3,\n          clickToChange: false,\n          itemWidth: 80,\n          centered: false,\n          arrows: true,\n          infinite: false,\n          offset: 30\n        },\n        500: {\n          itemWidth: 70,\n          offset: 30,\n          slidesPerPage: 2,\n          slidesPerScroll: 1,\n          clickToChange: false,\n          centered: true,\n          animationSpeed: 2000,\n          infinite: false,\n        },\n      }}>{movieRecResults}</Carousel></div>\n  </div>\n}\n\nexport default MovieRec\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport MovieItemDetails from './movie_item_details'\nimport MovieCast from './movie_cast'\nimport MovieRec from './movie_recommend'\n\nconst URL = 'https://api.themoviedb.org/3/movie';\nconst API_KEY = 'api_key=40d60badd3d50dea05d2a0e053cc96c3&language=en-US';\n\nclass MovieDetails extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      movieDetails: [],\n      movieCast: [],\n      movieRec: []\n    }\n  }\n\n   fetchMovieDetails = () => {\n    const itemId = this.props.match.params.id;\n    axios.get(`${URL}/${itemId}?${API_KEY}&append_to_response=credits`).then(res => {\n      this.setState({ movieDetails: res.data })\n    });\n  }\n\n\n\n  fetchMovieCredits = () => {\n    const itemId = this.props.match.params.id;\n    axios.get(`${URL}/${itemId}/credits?${API_KEY}`).then(res => {\n      this.setState({ movieCast: res.data.cast })\n    })\n  }\n\n  fetchRecommendedMovies = () => {\n    const itemId = this.props.match.params.id;\n    axios.get(`${URL}/${itemId}/recommendations?${API_KEY}`).then(res => {\n      this.setState({ movieRec: res.data.results })\n    })\n  }\n\n  componentDidMount(){\n    this.fetchMovieDetails()\n    this.fetchMovieCredits()\n    this.fetchRecommendedMovies()\n  }\n\n  componentDidUpdate(prevProps) {\n    // Reloads components if user clicks on recommended movies\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      window.scrollTo(0, 0) // Scroll to top on Route Change\n      this.fetchMovieDetails()\n      this.fetchMovieCredits()\n      this.fetchRecommendedMovies()\n    }\n  }\n\n  render(){\n    return (\n      <div className='movie-details'>\n        <MovieItemDetails movieDetails={ this.state.movieDetails } />\n        <MovieCast movieCast={ this.state.movieCast } /> \n        <MovieRec movieRec={ this.state.movieRec } />\n      </div>\n    )\n  }\n}\n\nexport default MovieDetails\n","import React, { Component } from 'react'\nimport './App.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/home'\nimport TvDetails from './components/tv_details'\nimport MovieDetails from './components/movie_details'\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route exact path='/details/movie/:id' component={MovieDetails} />\n            <Route exact path='/details/tv/:id' component={TvDetails} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n// import { Router } from 'react-router';\nimport createHashHistory from 'history/createHashHistory';\n\nimport { HashRouter } from 'react-router-dom';\n\nconst hashHistory = createHashHistory({ basename: process.env.PUBLIC_URL });\n\nReactDOM.render(\n  <HashRouter history={hashHistory}>\n    <App />\n  </HashRouter>, \n  document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}